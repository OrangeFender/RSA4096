#include<iostream>
#include<cstring>
#include"BigInt.h"

#include"Montgomery.h"

#include<windows.h>


uInt2048 REDC(uInt4096 T,uInt2048 N,uInt2048 N_);

int main(){
    uInt2048 a("27023c63e3b9245fac56496fbdd2e80dd050b1bffe0f844746b718bfda805b44d95901fd9bb01b6bb0ea7854793844657b6ab2d991578ebdb08fa40356a096f1aa2ebc519ec6664bc2585b5981051f428d248b6f1996a5565c8abdd47e60dbc461aa41d349bdb19a569ac106848bfa46bb93363d8c13329b9f14a71efd04289c68e7140b32196911e7a8709a5640dd70458746946a7eb5dbadda3c045f374bc77f9bb9b313abf28a858696d8d48fef57eb79de3ea183ccb27c766e8c6c85fd7ee7b8b9ab2e20e658ce429ba300f28e2d29d8f6413b396f98c84e6e0fb5bd215c4e3bac41fd1a1dc92329bdb04033dc31b35eda6a8ddd759c37af8fd724c8caec");
    uInt2048 b("cdceb37cd5a0639ca64b9b99b998512a102ea44157d05aff9e75bd48cc8a0312c6a9719860dbf9b609eb9689bfc236740ebe1341fd6f09aa97b49745a780937269036ba70256470a162a83027f9c9762b2133273d6a1fafa00dba32a78d28931f3f9d87f0c4014f7fea88ff84885f0e999bfa3f7fccfeef50ab2d6a75f8da299ac51df6fb071da684ee0dd2488a2acb47baff22268fae030e8d27d45a96e37f59a6f446953bb7fb53aed82affe7bab47a114d59e747e0198363a389239c5dede80511b1e8964753ac556372548956cc1fb0d655bf3ffd519de054a4d8eb15d18a3f481407cac7dd19a40d3372d063ffe4cfc524d88b2353d25e79e826d474e3e");
        
    uInt2048 d("1234567890abcdef");
    
    uInt2048 e("3fae7609d0c2be4b4906cedd699aaeb3bf4d3e2fa25c51e07896251798f72acfb8e2513fe16163233ffe9cb7f934187aa29031db9f25f3c7df00fe003b4b361b217e603c31f7bb57fc0cde4192769594c9fa6285757c5fa3881dd65ce08cca85e4df7b7aac3825757fd210d289bec05d6a0671c946f64764492d55df3ab6fb14d79e5bf01c10aca587a093d730781f58a92a10f410633394dcc2d981d7cf3ad112b8b4d8dd4c559b62806e5e6fbccdcfe693a47c105520e5c65c3ab715251a97c5f56a3dbf9da89db86c731013fe0a6a4abf7a046c79cbc3bdfedafa431f52cb2c80661be3ade8ac28ecbaf8e18205b792aea70ea3e705944f6a3b00edb9c83f");
    //(a/d).printHEX();
    uInt2048 e_("4d013911cf5133998e98bd3dc89d113e48ee8f8b9210b8c28b482e702117b42fce6ac65aaeb5582c7d2c3edcbbd103ff2fd760300466e620c56384bcf06e2986a61478f16122f41bd62046577e987f087fcfa3aaaedf30c469063b140e2c3074f38a4e3fdfdb6944c31efa2f97d29667afb8dac9f14fac4d719e8cea5d7ff3c25204bd6d6976741683a7be98c371594f71bd273994f0183708cd9fbaf795e5790e4c6b1ee27243e582b0e13c12d323eb544ccf14855d69a85282ee09a3735f09404a90f952c9de26cc760e07386131b341dff5eec0e9a5a2ded48954d7a64035651e3490025d7100592f99d6cae9d1cc5810adafe58fb3984d650f2d3d61d841");

    uInt4096 res1("1f5c49822b98e68b3b100f8554402d1c845f434c3d7074db204e0d0063ef7ebc50b6829cca0f2c5c28ce55a251c6d959d795aff4dcf486a7a0564362490ae494a34a0b319fcb6e5af09d2a5a5c20f48d3400940dd3ab33dbac260e2d2efb5493f3ad944d1a2ae96fecc64f18a42056bc7d218a3fdc68df8381007a44b49a1545b8fd8c641648196cfe4b766928931f63297d74f9d9d20f47ea2ef9765635d502ca505f205b9560102a597de2020298d4cbe99cad2a58dd2d0b7aa93f6ad7926b1f3a04c74f8f51447c71d4f9cc61f02007d2195f818f7b377fc9fc5c959e2446134bb769842eb4a06d314e669e18ffe1839f6b515578f0c4af58a9767b9f8c0f37eefcd17676f2b4188111951fb5aa3f25870e16ae49c0cca67f40d8806b435ead11de0cb020ec0ff1bda7882943d48c3130b41dc8e5432e90ff22e51aadb85dde10681998ca6eb05bb7c5503bb65e8e26ce997016daa97ccb8fbc27c78892689e23316528fbd3dcbdf645b197f62924b1cf1f5cfff866da73b241354c79e6292f5d028679a1b7372e353b476b67beca8bbaf11a235ecd657e93d92734fa103109edba7a80872b167fbf21efa4695dc6612ac7efee98b93f1565e65698cbde7f06d37f6fe72aa355762a01f880dd7156af4ffb1de10813cac2ed742f7edcf2123617c7122beb0f77b97c42a6b7071146d4fc74b64ad587704bd5c93ed9e90d28");
    
    uInt2048 res2("ec3515f635828bacb372f017cc8450ed246e9b270bb655e34b34e0201a482a39c027dd8bcb7d04c49efc061d425ed04270d7daf1ffd2e52fab19d44f59ef12104884af26c6f15022203e83dc838d6a454240ae3762cdc0f68822013d72c29a0455b660f0797a4977f325d80ab49afd15bac4e9c27ed18c82f2ad509af68b15b2576cb9f5c3fd477b7ff219ef73a4eaa8031bf4637d145725289f0c022008782624525debbd67ee3136c3794af4541d7ed59e82a437e9ee6e325886cfa568f172e70dc654a8b7b619c10ddf50c9b4d831acef74eae9271cea408b95ec55364b71e734eecd1a2c3cd1f7aa24c88802ed794f05d219cfd248037a8ed7fa419f581");

    uInt4096 resa2("5f1ae6b6f30f1b26cd1d2e831d18e9372702c31e28e55632bcbd9e3e445e0a990cf0bcd576bcecfb01accf3cd861bedff65d352a39c29f5d66d0710356b8630e01f567df027266851df13042188e5921040c486f4f04fd4e340e6c7c5d6a3d045b1be24ee45a0f2c36675dced6883852bc4b7d4fed1580a19e474d39d1738107b8cc4f266727d4495caf89b521d5dee71bb55f178a86eb53a56691c9fef49714083fabf7b91f2cce00bc5a60876371b2f880cd9d0e8b3b65af1bb2db91e138a2aca5ddf3391d82a97b588cd56ef65dfed734cfb6f7ec6b088106891a73b74ab13018ae5e256ebefedb83223589a27b97040501405dab5acc7386778e2d1bacc0788cc6dddf260b2780cf954715e96648cfc36194bf9c11d0f925499493eb5cdd88c5aad349ad8a3a6acce31f037589e06bc7e40963ddc55a2d4029b2993fd72d0751685e538c7e7f26505bc08032cf00f7adfcc1f2672c153ec8ffc038f21ee8faf7b718458d5743c3956be1b131649ba42e09a4ae492fc103fd139bd63e018feb6d4271fa21e8171879a0c47e645db90962b28d3da6ba99014875ffa4780833fc0431eb89ee69f8062030ea8be701c05c55a0b6c39b08afe9d16262e0d04ad6e5c4dbed31ce767b373c7a7034bd04c1e53295ff8ecaae1611d2abede108e6f765126bbaff946fc54c4f0f804905a2f38bb8baf1c6fa93df7e996f811994990");
    //-----------测试乘法--------------
    uInt4096 c=a*b;
    uInt4096 a2=a*a;
    std::cout<<"Large number multiplication verification: "<<(res1==c)<<(a2==resa2)<<std::endl;
    //----------测试模约减--------------
    (a%d).printHEX();
    
    std::cout<<"Barrett reduction verification: "<<((b%e)==res2)<<std::endl;
    //-------测试蒙哥马利乘法------------

    //MontgomeryInt::setNandN_(e,e_);
    MontgomeryInt::setN(e);
    MontgomeryInt A(a);
    //A.convert().printHEX();
    MontgomeryInt B(b);
    MontgomeryInt C=A*B;
    //(C.convert()).printHEX();
    //(res1%e).printHEX();
    std::cout<<"Montgomery multiplication verification: "<<((res1%e)==C.convert())<<std::endl;

    //-------测试蒙哥马利幂运算效率------------

    
    //测试程序运行时间
    LARGE_INTEGER frequency;
    LARGE_INTEGER start_time, end_time;

    
    QueryPerformanceFrequency(&frequency);

    QueryPerformanceCounter(&start_time);

    for(int i=0;i<2048;i++){
        C=C*C;
    }

    // 获取程序执行结束的时间点
    QueryPerformanceCounter(&end_time);

    // 计算程序执行时间（单位：秒）
    double elapsed_seconds = static_cast<double>(end_time.QuadPart - start_time.QuadPart) / frequency.QuadPart;

    // 输出执行时间
    std::cout << "Multiple 2048 times cost" << elapsed_seconds << "s" << std::endl;

    //C.convert().printHEX();
    

    return 0;
}